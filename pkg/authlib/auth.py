import string
import random
from os import getenv
from pymongo import MongoClient
from passlib.context import CryptContext

# =================================================== VARIABLES =================================================== #
# agrégation, sélection, jointure, création

# Env var
SECRET_KEY = getenv("SECRET_KEY")

# DB file
client = MongoClient(getenv("MONGO_CLUSTER"))
db = client.cnambot
print([user for user in db.users.find()])

# Hashing
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

# Characters to generate password from
characters = list(string.ascii_letters + string.digits + string.punctuation)

# =============================================== PASSWORDS FUNCTIONS =============================================== #


def pwd_generator() -> str:
    """
    Description: Generates a password for those user who have no idea
    :return: Password generated by the func
    """
    random.shuffle(characters)
    password = [random.choice(characters) for _ in range(10)]
    random.shuffle(password)
    return "".join(password)


def verify_password(plain_password: str, hashed_password: str):
    """
    Description:
    :return:
    """
    return pwd_context.verify(plain_password, hashed_password)


def get_password_hash(password: str) -> str:
    """
    Description:
    :param password
    :return:
    """
    return pwd_context.hash(password)

# =============================================== DATABASES FUNCTIONS =============================================== #


def create_user(username: str, email: str, promo: str, pwd: str):
    """
    Description:
    :param username:
    :param email:
    :param promo:
    :param pwd:
    """
    db.users.insert_one({
        "username": username,
        "email": email,
        "password": get_password_hash(pwd),
        "promo": promo,
        "admin": False
    })


def user_in_db(email: str):
    """
    Description:
    :param email:
    :return:
    """
    for doc in db.users.find():
        if email == doc["email"]:
            return "Vous êtes déjà inscrit sur CnamBot !"
    return
